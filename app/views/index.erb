<div align="center">
    <br>
    <form action='/' method='post'>

        <input class="search" id="search" type="text" name="city_name" placeholder="<%= @city %>" />
        <input type="submit" id="search-button" type="submit"
       style="position: absolute; left: -9999px; width: 1px; height: 1px;"
       tabindex="-1" value="" />
    </form>
  <br>
</div>

<div id="map"></div>

<script type="text/javascript">

var map;
function initMap() {

  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: <%= @lat %>, lng: <%= @lon %>},
    zoom: 8,
    mapTypeId: 'satellite',
    disableDefaultUI: true,
  });
}
</script>
<script async defer
      src="https://maps.googleapis.com/maps/api/js?key=<%=DEVELOPER_KEY%>&callback=initMap">
</script>

<!-- <div id="player"></div> -->
<script type="text/javascript">
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '10%',
          width: '10%',
          videoId: '<%= @youtube_id %>',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
</script>

<div class="info">
    <div class="info__inner">
        <p>
            <b>Name: </b><%= @name %> /
            <b>Country: </b><%= @country %> /
            <b>Description: </b><%= @description %> /
            <b>Pressure: </b><%= @pressure %> hpa /
            <b>Humidity: </b><%= @humidity %> /
            <b>Cloudiness: </b><%= @clouds %> /
            <b>Wind speed: </b><%= @windspeed %> /
            <b>Wind temperature: </b><%= @winddeg %> /
            <b>Longitude: </b><%= @lon %> /
            <b>Latitude: </b><%= @lat %> /
            <b>Sunrise: </b><%= @sunrise %> /
            <b>Sunset: </b><%= @sunrise %> /
            <b>Country/state: </b><%= @country %> /
            <b>Info from: </b><%= @base %> /
            <b>City id: </b><%= @id %><br>
            <!-- <hr> -->
        </p>

        <p><iframe src="http://ghbtns.com/github-btn.html?user=gastongouron&amp;repo=weather-app&amp;type=watch&amp;size=large" allowtransparency="true" frameborder="0" scrolling="0" width="77px" height="30px"></iframe></p>
    </div>
</div>